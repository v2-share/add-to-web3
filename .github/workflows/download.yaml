name: 2Download right now

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      Url:
        description: 'Download Url'
        required: false
        default: 'false'
      
env:
  FILE_PATH: 'downloads'

jobs:

  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - uses: actions/checkout@v2
      with:
        persist-credentials: false
        fetch-depth: 0

    - name: Aria2 Install
      run: sudo apt install -y aria2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: install prerequisites
      run: |
        python -m pip install --upgrade pip wheel
        pip install install lk21==1.5.61 pymongo pymongo[srv] pymongo[tls] certifi

    - name: Downloading
      id: downloading
      run: |
        python download.py  --con="${{ secrets.DB_CONNECT }}" --isnow="1"
        filename=$(ls downloads | head -n1)
        echo "::set-output name=path::downloads/$filename"
        echo "::set-output name=filename::$filename"
        size=$(ls -l downloads/$filename | awk '{print $5}' )
        echo "::set-output name=size::$size"

    - uses: ykxVK8yL5L/add-to-web3@v1.5
      id: web3
      if: steps.downloading.outputs.filename != '' && !cancelled()
      with:
        web3_token: ${{ secrets.WEB3_STORAGE_TOKEN }}
        path_to_add: "${{ steps.downloading.outputs.path }}"
        file_name: "${{ steps.downloading.outputs.filename }}"
        wrap_with_directory: true

    - name: Save Data
      id:  database
      if: steps.downloading.outputs.filename != '' && !cancelled()
      run: |
        python mongodb.py --con="${{ secrets.DB_CONNECT }}" --name="${{ steps.downloading.outputs.filename }}" --size="${{ steps.downloading.outputs.size }}" --cid="${{ steps.web3.outputs.cid }}"
        echo "::set-output name=status::ok"

    - name: Notify upload info to mqtt broker
      if: steps.database.outputs.status != '' && !cancelled()
      uses: juhrlass/mqtt-action@master
      with:
        protocol: mqtt
        host: broker-cn.emqx.io
        port: 1883
        topic: ${{ secrets.SYNC_TOPIC }}
        message: 'ok'
        username: ''
        password: ''

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        token: ${{ github.token }}
        repository: ${{ github.repository }}
        retain_days: 0
        keep_minimum_runs: 0

  rerun:
    runs-on: ubuntu-latest
    if: always()  # This job will always run

    steps:
    - name: Trigger Original Workflow
      uses: actions/github-script@v6
      with:
        script: |
          const { GitHub, context } = require('@actions/github');
          const github = new GitHub(process.env.token);

          const { data: workflow } = await github.actions.getWorkflowRun({
            owner: context.repo.owner,
            repo: context.repo.repo,
            run_id: ${{ github.run_id }}
          });

          const { data: dispatch } = await github.rest.repos.createDispatchEvent({
            owner: context.repo.owner,
            repo: context.repo.repo,
            event_type: "repository_dispatch",
            client_payload: {
              rerun_workflow: true
            }
          });
          console.log(`Triggered original workflow: ${workflow.workflow.name}`);

      env:
        token: ${{ secrets.TOKEN }}
